
services:
  db:
    container_name: wikidocify_db
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: document_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wikidocify_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  minio:
    container_name: wikidocify_minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Admin Console
    volumes:
      - minio_data:/data
    networks:
      - wikidocify_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: wikidocify_app
    build: .
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: document_db
      DB_PORT: 5432
      DB_SSL_MODE: disable
      PORT: 8888
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "8888:8888"
    networks:
      - wikidocify_network

networks:
  wikidocify_network:
    name: wikidocify_network

volumes:
  postgres_data:
    name: wikidocify_postgres_data
  minio_data:
    name: wikidocify_minio_data
